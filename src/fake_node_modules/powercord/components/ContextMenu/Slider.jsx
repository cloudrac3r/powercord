/**
 * Powercord, a lightweight @discordapp client mod focused on simplicity and performance
 * Copyright (C) 2018-2019  aetheryx & Bowser65
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

const { AsyncComponent } = require('powercord/components');
const { React, getModule, getModuleByDisplayName } = require('powercord/webpack');

const ItemGroup = require('./ItemGroup');
const Slider = AsyncComponent.from(getModuleByDisplayName('Slider'));

let classes = null;
setImmediate(async () => {
  classes = await getModule([ 'itemToggle', 'checkbox' ]);
});

module.exports = class SliderMenuItem extends React.Component {
  render () {
    const slider = (
      <div className={classes.itemSlider}>
        <div className={classes.label} style={this.props.markers ? { marginBottom: '16px' } : null}>
          {this.props.name}
        </div>

        {this.props.markers && (
          <Slider
            mini={true}
            className={classes.slider}
            fillStyles={this.props.color ? { backgroundColor: this.props.color } : {}}
            equidistant={true}
            stickToMarkers={true}
            {...this.props}
          />
        )}

        {!this.props.markers && (
          <Slider
            mini={true}
            className={classes.slider}
            fillStyles={this.props.color ? { backgroundColor: this.props.color } : {}}
            {...this.props}
          />
        )}
      </div>
    );

    if (this.props.seperate) {
      return React.createElement(ItemGroup, {
        children: [ slider ]
      });
    }

    return slider;
  }
};
